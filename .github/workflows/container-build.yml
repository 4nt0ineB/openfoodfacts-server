name: Container Image Build CI

on:
  push:
    branches:
      - main
      - deploy-*
    tags: 
      - v*.*.*
    pull_request:
      branches:
      - main
      types: [ labeled, opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'ref/tags/v') || github.ref == 'ref/heads/main' || github.event.label.name == 'deploy-dev' }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Publish frontend image to Registry
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        name: ${{ github.repository }}/frontend
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        dockerfile: docker/frontend/Dockerfile
        snapshot: true
        tag_semver: true
        tags: "latest,${{ github.sha }}"
      id: publish_frontend
    - name: Copy frontend output for backend container
      run: |
        CONTAINER=$(docker create ghcr.io/${{ github.repository }}/frontend:${{ steps.publish_frontend.outputs.snapshot-tag }})
        docker cp $CONTAINER:/opt/product-opener/html/images/icons/dist - > icons.tar
        docker cp $CONTAINER:/opt/product-opener/html/js/dist - > js.tar
        docker cp $CONTAINER:/opt/product-opener/html/css/dist - > css.tar
        tar -xf icons.tar -C ./html/images/icons/
        tar -xf js.tar -C ./html/js/
        tar -xf css.tar -C ./html/css/
        rm icons.tar js.tar css.tar
        docker rm -v $CONTAINER
    - name: Publish backend image to Registry
      uses: elgohr/Publish-Docker-Github-Action@3.04
      with:
        name: ${{ github.repository }}/backend
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        dockerfile: docker/backend/Dockerfile
        snapshot: true
        tag_semver: true
        tags: "latest,${{ github.sha }}"
