name: Container Deployment CI

on:
  push:
    branches: 
      - main
    tags: 
      - v*.*.*
    pull_request:
      branches:
      - main
      types: [ labeled, opened, synchronize, reopened ]

jobs:
  check-labels:
    steps:
    - name: Check pull request labels
      run: |
        array = ${{ github.event.pull_request.labels.*.name }}
        echo "${array[*]}"
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/v') && 'off-org' || 'off-net' }}
    concurrency: ${{ startsWith(github.ref, 'refs/tags/v') && 'off-org' || 'off-net' }}
    # if: ${{ startsWith(github.ref, 'ref/tags/v') || github.ref == 'ref/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy-dev') }}
    steps:
    - name: Wait for container build workflow
      uses: tomchv/wait-my-workflow@v1.1.0
      id: wait-build
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: build
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
        intervalSeconds: 10
        timeoutSeconds: 600 # 10m

    - name: Do something if build fail
      if: steps.wait-build.outputs.conclusion == 'failure'
      run: echo fail && false # fail if build fail

    - name: Do something if build timeout
      if: steps.wait-build.outputs.conclusion == 'timed_out'
      run: echo Timeout && false # fail if build time out

    - name: Deploy image to Proxmox VM
      uses: appleboy/ssh-action@master
      env:
        DOCKER_CLIENT_TIMEOUT: 120
        COMPOSE_HTTP_TIMEOUT: 120
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ${{ secrets.USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: DOCKER_CLIENT_TIMEOUT,COMPOSE_HTTP_TIMEOUT
        script: |
          # Clone Git repository if not already there
          [ ! -d 'openfoodfacts-server' ] && git clone --depth 1 https://github.com/openfoodfacts/openfoodfacts-server/ --no-single-branch 2>/dev/null

          # Go to docker/ directory
          cd openfoodfacts-server/docker/

          # Fetch newest commits (in case it wasn't freshly cloned)
          git fetch --depth 1

          # Checkout current commit SHA
          git checkout ${{ github.sha }}

          # Set docker-compose environment
          echo "TAG=${{ github.sha }}" > .env

          # Override domain name in nginx.conf
          sed -i.bak 's/productopener.localhost/openfoodfacts.net/g' ./frontend-git/conf/nginx.conf

          # Recreate containers that have a new image
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans 2>/dev/null

          # Import sample data into docker-compose db
          sudo docker-compose -f docker-compose.yml -f docker-compose.prod.yml exec backend bash /opt/scripts/import_sample_data.sh

          # Import latest dump of mongodb production db
          # wget https://static.openfoodfacts.org/data/openfoodfacts-mongodbdump.tar.gz
          # sudo docker cp openfoodfacts-mongodbdump.tar.gz docker_mongodb_1:/data/db
          # sudo docker exec -it docker_mongodb_1 -c "cd /data/db && tar -xzvf openfoodfacts-mongodbdump.tar.gz && mongorestore"

          # Remove obsolete Docker objects to save disk space
          sudo docker system prune -a
